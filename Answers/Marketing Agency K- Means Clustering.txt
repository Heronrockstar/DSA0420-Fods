import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns

np.random.seed(42)
customer_ids = np.random.choice(range(1, 101), 1000, replace=True)
amount_spent = np.random.exponential(scale=100, size=1000)
items_purchased = np.random.poisson(lam=3, size=1000)

data = pd.DataFrame({
    'customer_id': customer_ids,
    'amount_spent': amount_spent,
    'items_purchased': items_purchased
})

customer_data = data.groupby('customer_id').agg({
    'amount_spent': 'sum',
    'items_purchased': 'sum'
}).reset_index()

scaler = StandardScaler()
customer_data_scaled = scaler.fit_transform(customer_data[['amount_spent', 'items_purchased']])

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, random_state=42)
    kmeans.fit(customer_data_scaled)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(8, 4))
plt.plot(range(1, 11), wcss, marker='o')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.title('Elbow Method')
plt.show()

kmeans = KMeans(n_clusters=3, random_state=42)
customer_data['cluster'] = kmeans.fit_predict(customer_data_scaled)

plt.figure(figsize=(10, 6))
sns.scatterplot(x='amount_spent', y='items_purchased', hue='cluster', data=customer_data, palette='viridis')
plt.title('Customer Segments')
plt.xlabel('Total Amount Spent')
plt.ylabel('Total Items Purchased')
plt.legend(title='Cluster')
plt.show()
